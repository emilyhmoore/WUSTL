table(DocketMerge2$legalDeadline)
table(DocketMerge2$legalDeadlines)
table(DocketMerge2$legalDeadline=="Not Listed")
table(DocketMerge2$publicationPeriod)
table(DocketMerge2$federalismImplications)
table(DocketMerge2$impactsAndEffects)
table(DocketMerge2$smallEntitiesAffected)
grep("Business",DocketMerge2$smallEntitiesAffected)
ifelse(grep("Business",DocketMerge2$smallEntitiesAffected),1,0)
ifelse(DocketMerge2[grep("Business",DocketMerge2$smallEntitiesAffected,]),1,0)
ifelse(DocketMerge2[grep("Business",DocketMerge2$smallEntitiesAffected),],1,0)
ifelse(DocketMerge2[grep("Business",DocketMerge2$smallEntitiesAffected)],1,0)
"Business" %in% DocketMerge2$smallEntitiesAffected
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
str_match(pattern="Business",DocketMerge2$smallEntitiesAffected)
str_detect(pattern="Business",DocketMerge2$smallEntitiesAffected)
DocketMerge2$BusinessEffect<-ifelse(str_detect(pattern="Business",DocketMerge2$smallEntitiesAffected),1,0)
table(DocketMerge2$energyEffects)
table(DocketMerge2$impactsAndEffects)
table(DocketMerge2$governmentLevelsAffected)
table(DocketMerge2$BusinessEffect)
table(DocketMerge2$No.OMB.Communication.Review)
table(DocketMerge2$No.OMB.Rule.Review)
table(DocketMerge2$Independent)
head(sort(table(DocketMerge2$agency)))
tail(sort(table(DocketMerge2$agency)))
table(DocketMerge2$legalDeadline=="Not Listed")
DocketMerge2$HasDeadline<-ifelse(DocketMerge2$legalDeadline=="Not Listed",0,1)
stanmod5<-stan_glm.nb(numberOfComments~ImportanceFactor+oneNPRM+twoNPRM+MoreThan2NPRM+HasInterim+
TotalHearings+SizeThousands+HasRIN+Bush+LastYear+Independent+BusinessEffect+HasDeadline+
factor(year)+factor(agency), data=na.omit(DocketMerge2), link = "log",
chains=4,cores=4, iter=2000,warmup=500,prior = normal(), prior_intercept = normal(),
prior_aux = cauchy(), prior_PD = FALSE)
cbind(stanmod5$coefficients, stanmod5$ses)
stanmodlogit3<-stan_glm(MoreThan100~ImportanceFactor+oneNPRM+twoNPRM+MoreThan2NPRM+HasInterim+TotalHearings+
BusinessEffect+HasDeadline+SizeThousands+HasRIN+Bush+LastYear+
factor(year)+factor(agency), data=na.omit(DocketMerge2),family=binomial(link="logit"),
chains=4,cores=4,iter=2000,warmup=500,prior = normal(), prior_intercept = normal(),
prior_aux = cauchy(), prior_PD = FALSE)
cbind(stanmodlogit3$coefficients, stanmodlogit3$ses)
stanmod6<-stan_glm.nb(numberOfComments~ImportanceFactor+oneNPRM+twoNPRM+MoreThan2NPRM+HasInterim+
TotalHearings+SizeThousands+HasRIN+Bush+LastYear+BusinessEffect+HasDeadline+
factor(year)+factor(agency), data=na.omit(DocketMerge2), link = "log",
chains=4,cores=4, iter=2000,warmup=500,prior = normal(), prior_intercept = normal(),
prior_aux = cauchy(), prior_PD = FALSE)
cbind(stanmod6$coefficients, stanmod6$ses)
cbind(round(stanmodlogit3$coefficients), stanmodlogit3$ses)
cbind(round(stanmodlogit3$coefficients,3), stanmodlogit3$ses)
cbind(round(stanmod6$coefficients,3), stanmod6$ses)
cbind(round(stanmod6$coefficients,3), stanmod6$ses)
DocketMerge2[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant",]
summary(DocketMerge2$numberOfComments[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant",])
summary(DocketMerge2$numberOfComments[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant"])
DocketMerge2$numberOfComments[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant"&DocketMerge2$numberOfComments>1000]
DocketMerge2$numberOfComments[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant"&DocketMerge2$numberOfComments>10000]
DocketMerge2[22632,]
DocketMerge2[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant"&DocketMerge2$numberOfComments>10000]
DocketMerge2[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant"&DocketMerge2$numberOfComments>10000,]
DocketMerge2[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant"&DocketMerge2$numberOfComments>10000,"rin"]
DocketMerge2[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant"&DocketMerge2$numberOfComments>100000,"rin"]
DocketMerge2[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant"&DocketMerge2$numberOfComments>10000,"rin"]
DocketMerge2[DocketMerge2$ImportanceFactor=="Substantive, Nonsignificant"&DocketMerge2$numberOfComments>10000,c("agency","rin")]
DocketMerge2[DocketMerge2$ImportanceFactor=="Routine and Frequent"&DocketMerge2$numberOfComments>10000,c("agency","rin")]
DocketMerge2[DocketMerge2$ImportanceFactor=="Routine and Frequent"&DocketMerge2$numberOfComments>1000,c("agency","rin")]
DocketMerge2[DocketMerge2$ImportanceFactor=="Routine and Frequent"&DocketMerge2$numberOfComments>100,c("agency","rin")]
levels(DocketMerge2$ImportanceFactor)
DocketMerge2[DocketMerge2$ImportanceFactor=="Not Listed"&DocketMerge2$numberOfComments>100,c("agency","rin")]
DocketMerge2[DocketMerge2$ImportanceFactor=="Not Listed"&DocketMerge2$numberOfComments>10000,c("agency","rin")]
DocketMerge2$docketId
DocketMerge2[DocketMerge2$ImportanceFactor=="Not Listed"&DocketMerge2$numberOfComments>10000,c("agency","docketId")]
DocketMerge2[DocketMerge2$ImportanceFactor=="Not Listed"&DocketMerge2$numberOfComments>100000,c("agency","docketId")]
summary(DocketMerge2[DocketMerge2$agency=="Environmental Protection Agency",])
summary(DocketMerge2[DocketMerge2$agency=="Environmental Protection Agency","numberOfComments"])
summary(DocketMerge2$numberOfComments)
DocketMerge2$rin[DocketMerge2$numberOfComments==4383000]
DocketMerge2[DocketMerge2$numberOfComments==4383000,]
DocketMerge2[DocketMerge2$numberOfComments>1000000,]
DocketMerge2[DocketMerge2$numberOfComments>1000000,"rin"]
DocketMerge2[DocketMerge2$numberOfComments>3000000,"rin"]
DocketMerge2[DocketMerge2$numberOfComments>1000000,"rin"]
DocketMerge2[DocketMerge2$numberOfComments>1000000,c("rin", "agency")]
DocketMerge2[DocketMerge2$numberOfComments>100000,c("rin", "agency")]
DocketMerge2[DocketMerge2$numberOfComments>100000,c("rin","docketId", "agency")]
summary(DocketMerge2$numberOfComments)
summary(DocketMerge2$numberOfComments[is.na(DocketMerge2$TotalHearings)==FALSE,])
summary(DocketMerge2$numberOfComments[is.na(DocketMerge2$TotalHearings)==FALSE])
table(DocketMerge2$numberOfComments==0)
sum(DocketMerge2$numberOfComments[DocketMerge2$agency=="Environmental Protection Agency",])
sum(DocketMerge2$numberOfComments[DocketMerge2$agency=="Environmental Protection Agency"])
sum(DocketMerge2$numberOfComments[DocketMerge2$agency=="Environmental Protection Agency"])/nrow(DocketMerge2$numberOfComments[DocketMerge2$agency=="Environmental Protection Agency"])
sum(DocketMerge2$numberOfComments[DocketMerge2$agency=="Environmental Protection Agency"])/length(DocketMerge2$numberOfComments[DocketMerge2$agency=="Environmental Protection Agency"])
mean(DocketMerge2$numberOfComments[DocketMerge2$agency=="Environmental Protection Agency"])
AgencyMeans<-unique(DocketMerge2$agency)
AgencyMeans$means<-numeric()
head(AgencyMeans)
AgencyMeans<-as.data.frame(unique(DocketMerge2$agency))
head(AgencyMeans)
AgencyMeans<-as.data.frame(agency=unique(DocketMerge2$agency))
AgencyMeans<-as.data.frame("agency"=unique(DocketMerge2$agency))
AgencyMeans<-as.data.frame(unique(DocketMerge2$agency))
AgencyMeans$means<-numeric()
AgencyMeans$means<-numeric(96)
for(i in 1:length(AgencyMeans)){
AgencyMeans[i]<-mean(DocketMerge2$numberOfComments[DocketMerge2$agency==AgencyMeans[i,1]])
}
head(AgencyMeans)
AgencyMeans<-as.data.frame(unique(DocketMerge2$agency))
head(AgencyMeans,10)
AgencyMeans$means<-numeric(96)
head(AgencyMeans,10)
for(i in 1:length(AgencyMeans)){
AgencyMeans[i,2]<-mean(DocketMerge2$numberOfComments[DocketMerge2$agency==AgencyMeans[i,1]])
}
head(AgencyMeans,10)
sort(table(AgencyMeans$means))
AgencyMeans<-as.data.frame(unique(DocketMerge2$agency))
AgencyMeans$means<-numeric(96)
for(i in 1:nrow(AgencyMeans)){
AgencyMeans[i,2]<-mean(DocketMerge2$numberOfComments[DocketMerge2$agency==AgencyMeans[i,1]])
}
sort(table(AgencyMeans$means))
sort((AgencyMeans$means))
AgencyMeans[order(AgencyMeans)]
AgencyMeans[order(AgencyMeans),]
AgencyMeans[order(AgencyMeans$means),]
AgencyMeans[order(round(AgencyMeans$means),3),]
AgencyMeans[order(round(AgencyMeans$means,2)),]
AgencyMeans[order(round(AgencyMeans$means,1)),]
AgencyMeans<-round(AgencyMeans$means,2)
head(AgencyMeans)
AgencyMeans<-round(AgencyMeans$means,1)
head(AgencyMeans)
AgencyMeans[order(AgencyMeans$means),]
AgencyMeans<-as.data.frame(unique(DocketMerge2$agency))
AgencyMeans$means<-numeric(96)
for(i in 1:nrow(AgencyMeans)){
AgencyMeans[i,2]<-mean(DocketMerge2$numberOfComments[DocketMerge2$agency==AgencyMeans[i,1]])
}
AgencyMeans$means<-round(AgencyMeans$means,2)
AgencyMeans$means<-round(AgencyMeans$means,1)
AgencyMeans[order(AgencyMeans$means),]
DocketMerge2$numberOfComments[DocketMerge2$agency=="National Labor Relations Board"]
DocketMerge2$numberOfComments[DocketMerge2$agency=="Wage and House Division"]
DocketMerge2$numberOfComments[DocketMerge2$agency=="Wage and Hour Division"]
for(i in 1:nrow(AgencyMeans)){
AgencyMeans[i,3]<-length(DocketMerge2$numberOfComments[DocketMerge2$agency==AgencyMeans[i,1]])
}
head(AgencyMeans)
DocketMerge2$numberOfComments[DocketMerge2$agency=="Air Force Department"]
AgencyMeans<-as.data.frame(unique(DocketMerge2$agency))
AgencyMeans$means<-numeric(96)
for(i in 1:nrow(AgencyMeans)){
AgencyMeans[i,2]<-mean(DocketMerge2$numberOfComments[DocketMerge2$agency==AgencyMeans[i,1]])
}
AgencyMeans$means<-round(AgencyMeans$means,1)
AgencyMeans$totalrules<-numeric(96)
for(i in 1:nrow(AgencyMeans)){
AgencyMeans[i,3]<-length(DocketMerge2$numberOfComments[DocketMerge2$agency==AgencyMeans[i,1]])
}
head(AgencyMeans)
AgencyMeans[AgencyMeans$totalrules>=5][order(AgencyMeans$means),]
AgencyMeans[AgencyMeans$totalrules>=5,][order(AgencyMeans$means),]
AgencyMeans[order(AgencyMeans$means),][AgencyMeans$totalrules>=5,]
AgencyMeans<-AgencyMeans[order(AgencyMeans$means),]
AgencyMeans[AgencyMeans$totalrules>=5,]
AgencyMeans[AgencyMeans$totalrules>=5&order(AgencyMeans$means),]
AgencyMeans[AgencyMeans$totalrules>=10&order(AgencyMeans$means),]
save.image("~/Dropbox/Regulations.Gov/Workspace3.29.17.RData")
load("~/Dropbox/Regulations.Gov/Workspace3.29.17.RData")
AgencyNames<-unique(DocketMerge2$Agency)
AgencyNames
AgencyNames<-unique(DocketMerge2$agency)
AgencyNames
head(rep(AgencyNames, 13))
Year<-rep(2004:2016, 96)
Year
Year<-rep(2004:2016, each=96)
Year
AgencyDataset<-cbind(AgencyNames, Year)
AgencyDataset
AgencyDataset<-data.set(AgencyNames, Year)
AgencyDataset<-data.frame(AgencyNames, Year)
AgencyDataset
DocketMerge2[AgencyDataset$AgencyNames[1] & AgencyDataset$Year[1],]
AgencyDataset<-data.frame(AgencyNames, Year, stringsAsFactors = FALSE)
AgencyDataset
DocketMerge2[AgencyDataset$AgencyNames[1] & AgencyDataset$Year[1],]
DocketMerge2[DocketMerge2$agency==AgencyDataset$AgencyNames[1] & DocketMerge2$Year==AgencyDataset$Year[1],]
head(DocketMerge2$agency)
DocketMerge2[DocketMerge2$agency==AgencyDataset$AgencyNames[2] & DocketMerge2$Year==AgencyDataset$Year[2],]
DocketMerge2[DocketMerge2$agency==AgencyDataset$AgencyNames[3] & DocketMerge2$Year==AgencyDataset$Year[3],]
DocketMerge2[DocketMerge2$agency==AgencyDataset$AgencyNames[1] & DocketMerge2$year==AgencyDataset$Year[1],]
DocketMerge2[DocketMerge2$agency=="Environmental Protection Agency" & DockerMerge2$year==2004,]
DocketMerge2[DocketMerge2$agency=="Environmental Protection Agency" & DocketMerge2$year==2004,]
DocketMerge2[DocketMerge2$agency=="Administration for Children and Families" & DocketMerge2$year==2004,]
DocketMerge2[DocketMerge2$agency=="Administration of Children and Families" & DocketMerge2$year==2004,]
DocketMerge2[DocketMerge2$agency=="Administration of Children and Families",]
DocketMerge2[DocketMerge2$agency==AgencyDataset$AgencyNames[2] & DocketMerge2$year==AgencyDataset$Year[2],]
DocketMerge2[DocketMerge2$agency==AgencyDataset$AgencyNames[10] & DocketMerge2$year==AgencyDataset$Year[10],]
AgencyDataset$AgencyNames[1]
AgencyDataset$AgencyNames[10]
AgencyDataset$AgencyNames[20]
AgencyDataset$AgencyNames[30]
AgencyDataset$AgencyNames[32]
AgencyDataset$AgencyNames[33]
AgencyDataset$AgencyNames[35]
DocketMerge2[DocketMerge2$agency==AgencyDataset$AgencyNames[35] & DocketMerge2$year==AgencyDataset$Year[35],]
AgencyDataset$AgencyYear[35]
AgencyDataset$Year[35]
head(IsSignificant<-ifelse(DocketMerge2$priority=="Economically Significant"|DocketMerge2$priority=="Other Significant",1,0))
DocketMerge2$IsSignificant<-ifelse(DocketMerge2$priority=="Economically Significant"|DocketMerge2$priority=="Other Significant",1,0)
summary(DocketMerge2$IsSignificant)
DocketMerge2$MultipleNPRM<-ifelse(DocketMerge2$NPRMCount>1,1,0)
summary(DocketMerge2$MultipleNPRM)
head(DocketMerge2$MultipleNPRM)
head(DocketMerge2$NPRMCount)
SignificantMod<-glm(IsSignificant~LLExpertise+Expertise+IndependenceDimension2+SizeThousands+TotalHearings, data=DocketMerge2,family=binomial(link = "logit"))
summary(SignificantMod)
MultipleNPRMMod<-glm(MultipleNPRM~LLExpertise+Expertise+IndependenceDimension2+SizeThousands+TotalHearings, data=DocketMerge2,family=binomial(link = "logit"))
summary(MultipleNPRMMod)
HasExtensionMod<-glm(HasExtension~LLExpertise+Expertise+IndependenceDimension2+SizeThousands+TotalHearings, data=DocketMerge2,family=binomial(link = "logit"))
summary(HasExtensionMod)
LegalDeadlineMod<-glm(HasDeadline~LLExpertise+Expertise+IndependenceDimension2+SizeThousands+TotalHearings, data=DocketMerge2,family=binomial(link = "logit"))
summary(LegalDeadlineMod)
summary(HasExtensionMod)
summary(MultipleNPRMMod)
summary(HasExtensionMod)
summary(LegalDeadlineMod)
table(DocketMerge2$OMBRuleReview)
DocketMerge2$agency[DocketMerge2$OMBRuleReview==FALSE]
unique(DocketMerge2$agency[DocketMerge2$OMBRuleReview==FALSE])
head(DocketMerge2$docketId[DocketMerge2$priority=="Other Significant"])
head(DocketMerge2$docketId[DocketMerge2$priority=="Substantive, Nonsignificant"])
unique(DocketMerge2$docketId)
unique(DocketMerge2$priority)
head(DocketMerge2$docketId[DocketMerge2$priority=="Info./Admin./Other"])
load("~/Dropbox/Regulations.Gov/Workspace3.29.17.RData")
library(MASS)
library(sandwich)
library(lmtest)
library(multiwayvcov)
library(pscl)
library(stringr)
library(rstanarm)
attach(DocketMerge2)
new_data_predict<-data.frame(
ImportanceFactor<-"Routine and Frequent",
oneNPRM=0,
twoNPRM=1,
MoreThan2NPRM=0,
HasInterim=0,
HasRIN=1,
HasExtension=0,
HasDeadline=0,
BusinessEffect=0,
SizeThousands=mean(SizeThousands,na.rm=TRUE),
TotalHearings=mean(TotalHearings,na.rm=TRUE),
Bush=0,
Expertise=0,
LLExpertise=0,
AbstractWords=mean(AbstractWords, na.rm=TRUE),
IndependenceDimension2=mean(IndependenceDimension2,na.rm=TRUE),
year=2009
)
new_data_predict2<-data.frame(
ImportanceFactor<-"Economically Significant",
oneNPRM=0,
twoNPRM=1,
MoreThan2NPRM=0,
HasInterim=0,
HasRIN=1,
HasExtension=0,
HasDeadline=0,
BusinessEffect=0,
SizeThousands=mean(SizeThousands,na.rm=TRUE),
TotalHearings=mean(TotalHearings,na.rm=TRUE),
Bush=0,
Expertise=0,
LLExpertise=0,
AbstractWords=mean(AbstractWords, na.rm=TRUE),
IndependenceDimension2=mean(IndependenceDimension2,na.rm=TRUE),
year=2009
)
detach(DocketMerge2)
MeanofMeans<-function(draws){
Means<-numeric(draws)
for(i in 1:draws){
Means[i]<-mean(posterior_predict(stanModYearFEs4, new_data_predict))
}
}
MeanofMeans(100)
MeanofMeans<-function(draws){
Means<-numeric(draws)
for(i in 1:draws){
Means[i]<-mean(posterior_predict(stanModYearFEs4, new_data_predict))
}
return(mean(Means))
}
MeanofMeans(100)
MeanofMeans<-function(draws){
Means<-numeric(draws)
for(i in 1:draws){
Means[i]<-mean(posterior_predict(stanModYearFEs4, new_data_predict))
}
return(mean(Means))
}
MeanofMeans(100)
MeanofMeans<-function(draws){
Means<-numeric(draws)
for(i in 1:draws){
Means[i]<-mean(posterior_predict(stanModYearFEs4, new_data_predict))
}
return(mean(Means))
}
MeanofMeans(1000)
pp_check(stanModYearFEs4,nrep=100)
pp_check(stanModYearFEs4,nreps=100)
plot.density(posterior_predict(stanModYearFEs4, new_data_predict2))
plot(density(posterior_predict(stanModYearFEs4, new_data_predict2)))
plot(density(posterior_predict(stanModYearFEs4, new_data_predict2)))
plot(density(posterior_predict(stanModYearFEs4, new_data_predict2)))
lines(density(posterior_predict(stanModYearFEs4, new_data_predict2)))
plot(density(posterior_predict(stanModYearFEs4, new_data_predict2)),col="red")
lines(density(posterior_predict(stanModYearFEs4, new_data_predict2)),col="blue")
plot(density(posterior_predict(stanModYearFEs4, new_data_predict2)),col="red")
for(i in 1:1000){
lines(density(posterior_predict(stanModYearFEs4, new_data_predict2)),col="blue")
}
head(posterior_predict(stanModYearFEs4, new_data_predict2))
save.image("~/Dropbox/Regulations.Gov/Workspace3.29.17.RData")
d4<-(1:4)
x=2
sum(sample(d4,x,replace=TRUE)) ##x is number of dice, summing gives damage, for example.
d5<-(1:5)
x=1
sum(sample(d5,x,replace=TRUE)) ##x is number of dice, summing gives damage, for example.
d6<-(1:6)
x=2
sum(sample(d6,x,replace=TRUE)) ##x is number of dice, summing gives damage, for example.
d8<-(1:8)
x=2
sum(sample(d8,x,replace=TRUE)) ##x is number of dice, summing gives damage, for example.
d10<-(1:10)
x=8
sample(d10,x,replace=TRUE)
sum(sample(d10,x,replace=TRUE)) ##x is number of dice, summing gives damage, for example.
d12<-(1:12)
x=2
sum(sample(d12,x,replace=TRUE)) ##x is number of dice, summing gives damage, for example.
d20<-(1:20)
x=6
sample(d20,x,replace=TRUE)
sum(sample(d20,x,replace=TRUE)) ##x is number of dice, summing gives damage, for example.
d100<-(1:100)
x=2
sum(sample(d100,x,replace=TRUE)) ##x is number of dice, summing gives damage, for example.
setwd("~/WUSTL")
DebateStatementData=read.csv("DebateStatementData.csv", stringsAsFactors=FALSE)
head(DebateStatementData)
DebateStatementData=DebateStatementData[order(DebateStatementData$StatementNumber),]
head(DebateStatementData)
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSPTStem)
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSPTStem, pch=20)
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSPTStem, pch=20, type="line")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSPTStem, type="line", col="blue")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSTStem, col="red")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSBStem, col="purple")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSPTStem, type="line", col="blue")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSTStem, col="red")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSBStem, col="green")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSBStem, type="line", col="blue")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSTStem, col="red")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSPTStem, col="green")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSTStem, type="line", col="blue")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSBStem, col="red")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSPTStem, col="green")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSTStem/DebateStatementData$NonStopLength, type="line", col="blue")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$NEGSTStem/DebateStatementData$NonStopLength, type="line", col="blue")
OBAMA=DebateStatementData[DebateStatementData$Speaker=="OBAMA:",]
head(OBAMA)
OBAMA=DebateStatementData[DebateStatementData$Speaker=="OBAMA:",2:12]
head(OBAMA)
LEHRER=DebateStatementData[DebateStatementData$Speaker=="LEHRER:",2:12]
OBAMA=DebateStatementData[DebateStatementData$Speaker=="OBAMA:",2:12]
head(OBAMA)
LEHRER=DebateStatementData[DebateStatementData$Speaker=="LEHRER:",2:12]
ROMNEY=DebateStatementData[DebateStatementData$Speaker=="ROMNEY:",2:12]
head(ROMNEY)
plot(ROMNEY$POSPTStem)
plot(ROMNEY$POSPTStem, type="line")
plot(ROMNEY$NEGPTStem, type="line")
plot(ROMNEY$POSPTStem, type="l")
plot(ROMNEY$NEGPTStem, type="l")
plot(ROMNEY$NEGPTStem/ROMNEY$NonStopLength, type="l")
plot(ROMNEY$POSPTStem/ROMNEY$NonStopLength, type="l")
plot(ROMNEY$NEGPTStem/ROMNEY$POSPTStem, type="l")
plot(OBAMA$POSPTStem/OBAMA$NonStopLength, type="l")
plot(OBAMA$NEGPTStem/OBAMA$NonStopLength, type="l")
plot(ROMNEY$POSPTStem, type="l",col="red")
lines(LEHRER$POSPTStem, type="l",col="green")
lines(OBAMA$POSPTStem, type="l",col="blue")
plot(OBAMA$POSPTStem, type="l",col="blue")
lines(LEHRER$POSPTStem, type="l",col="green")
lines(ROMNEY$POSPTStem, type="l",col="red")
plot(OBAMA$NEGPTStem, type="l",col="blue")
lines(LEHRER$NEGPTStem, type="l",col="green")
lines(ROMNEY$NEGPTStem, type="l",col="red")
plot(ROMNEY$NEGPTStem, type="l",col="red")
lines(LEHRER$NEGPTStem, type="l",col="green")
lines(OBAMA$NEGPTStem, type="l",col="blue")
plot(OBAMA$POSPTStem, type="l",col="blue")
lines(LEHRER$POSPTStem, type="l",col="green")
lines(ROMNEY$POSPTStem, type="l",col="red")
plot(ROMNEY$NEGPTStem, type="l",col="red")
lines(LEHRER$NEGPTStem, type="l",col="green")
lines(OBAMA$NEGPTStem, type="l",col="blue")
sum(OBAMA$NonStopLength)
sum(ROMNEY$NonStopLength)
sum(LEHRER$NonStopLength)
plot(OBAMA$POSPTStem/OBAMA$NonStopLength, type="l",col="blue")
lines(LEHRER$POSPTStem/LEHRER$NonStopLength, type="l",col="green")
lines(ROMNEY$POSPTStem/ROMNEY$NonStopLength, type="l",col="red")
plot(ROMNEY$NEGPTStem/ROMNEY$NonStopLength, type="l",col="red")
lines(LEHRER$NEGPTStem/LEHRER$NonStopLength, type="l",col="green")
lines(OBAMA$NEGPTStem/OBAMA$NonStopLength, type="l",col="blue")
plot(OBAMA$NEGPTStem/OBAMA$NonStopLength, type="l",col="blue")
lines(LEHRER$NEGPTStem/LEHRER$NonStopLength, type="l",col="green")
lines(ROMNEY$NEGPTStem/ROMNEY$NonStopLength, type="l",col="red")
sum(OBAMA$POSPTStem)
sum(LEHRER$POSPTStem)
sum(ROMNEY$POSPTStem)
sum(OBAMA$NEGPTStem)
sum(LEHRER$NEGPTStem)
sum(ROMNEY$NEGPTStem)
sum(OBAMA$NEGPTStem)/sum(OBAMA$NonStopLength)
sum(ROMNEY$NEGPTStem)/sum(ROMNEY$NonStopLength)
sum(LEHRER$NEGPTStem)/sum(LEHRER$NonStopLength)
head(DebateStatementData)
DebateStatementData$PreviousSpeaker<-"None"
for(i in 1:(1-nrow(DebateStatementData))){
DebateStatementData$PreviousSpeaker[i+1]<-DebateStatementData$Speaker[i]
}
for(i in 1:(1-nrow(DebateStatementData))){
DebateStatementData$PreviousSpeaker[(i+1)]<-DebateStatementData$Speaker[i]
}
DebateStatementData$Speaker[1]
DebateStatementData$PreviousSpeaker[(1+1)]
for(i in 1:nrow(DebateStatementData)){
DebateStatementData$PreviousSpeaker[(i+1)]<-DebateStatementData$Speaker[i]
}
DebateStatementData$PreviousSpeaker<-"None"
for(i in 1:(nrow(DebateStatementData-1))){
DebateStatementData$PreviousSpeaker[(i+1)]<-DebateStatementData$Speaker[i]
}
DebateStatementData$PreviousSpeaker<-"None"
for(i in 1:(nrow(DebateStatementData)-1)){
DebateStatementData$PreviousSpeaker[(i+1)]<-DebateStatementData$Speaker[i]
}
DebateStatementData$PreviousSpeaker
plot(DebateStatementData$POSPTStem[DebateStatementData$PreviousSpeaker=="LEHRER:"])
plot(DebateStatementData$POSPTStem[DebateStatementData$PreviousSpeaker=="LEHRER:"],type="l")
plot(DebateStatementData$POSPTStem[DebateStatementData$PreviousSpeaker=="OBAMA:"],type="l")
plot(DebateStatementData$POSPTStem[DebateStatementData$PreviousSpeaker=="ROMNEY:"],type="l")
plot(DebateStatementData$POSPTStem[DebateStatementData$PreviousSpeaker=="ROMNEY:"&DebateStatementData$Speaker=="OBAMA:"],type="l")
plot(OBAMA$NEGPTStem/OBAMA$NonStopLength, type="l",col="blue")
lines(LEHRER$NEGPTStem/LEHRER$NonStopLength, type="l",col="green")
lines(ROMNEY$NEGPTStem/ROMNEY$NonStopLength, type="l",col="red")
OBAMA$NEGPTStem
DebateStatementData$POSPTStem
plot(OBAMA$POSPTStem/OBAMA$NonStopLength, type="l",col="blue")
lines(LEHRER$POSPTStem/LEHRER$NonStopLength, type="l",col="green")
lines(ROMNEY$POSPTStem/ROMNEY$NonStopLength, type="l",col="red")
plot(ROMNEY$NEGPTStem, type="l",col="red")
lines(LEHRER$NEGPTStem, type="l",col="green")
lines(OBAMA$NEGPTStem, type="l",col="blue")
plot(ROMNEY$POSPTStem/ROMNEY$NonStopLength, type="l")
plot(ROMNEY$NEGPTStem/ROMNEY$NonStopLength, type="l")
plot(ROMNEY$POSPTStem, type="l")
plot(ROMNEY$NEGPTStem, type="l")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSTStem/DebateStatementData$NonStopLength, type="line", col="blue")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$NEGSTStem/DebateStatementData$NonStopLength, type="line", col="blue")
plot(ROMNEY$POSPTStem, type="l")
plot(ROMNEY$NEGPTStem, type="l")
sum(OBAMA$NEGPTStem)
sum(ROMNEY$NEGPTStem)
sum(LEHRER$NEGPTStem)
sum(OBAMA$NonStopLength)
sum(ROMNEY$NonStopLength)
sum(LEHRER$NonStopLength)
sum(OBAMA$NEGPTStem)/sum(OBAMA$NonStopLength)
sum(ROMNEY$NEGPTStem)/sum(ROMNEY$NonStopLength)
sum(LEHRER$NEGPTStem)/sum(LEHRER$NonStopLength)
plot(OBAMA$POSPTStem/OBAMA$NonStopLength, type="l",col="blue")
lines(LEHRER$POSPTStem/LEHRER$NonStopLength, type="l",col="green")
lines(ROMNEY$POSPTStem/ROMNEY$NonStopLength, type="l",col="red")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSTStem/DebateStatementData$NonStopLength, type="line", col="blue")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$NEGSTStem/DebateStatementData$NonStopLength, type="line", col="blue")
plot(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSTStem, type="line", col="blue")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSSBStem, col="red")
lines(x=DebateStatementData$StatementNumber, y=DebateStatementData$POSPTStem, col="green")
plot(OBAMA$NEGPTStem/OBAMA$NonStopLength, type="l",col="blue")
lines(LEHRER$NEGPTStem/LEHRER$NonStopLength, type="l",col="green")
lines(ROMNEY$NEGPTStem/ROMNEY$NonStopLength, type="l",col="red")
plot(DebateStatementData$POSPTStem[DebateStatementData$PreviousSpeaker=="ROMNEY:"],type="l")
plot(DebateStatementData$NEGPTStem[DebateStatementData$PreviousSpeaker=="LEHRER:"],type="l")
#with Obama, no super clear pattern; a little more positive toward the end
plot(DebateStatementData$NEGPTStem[DebateStatementData$PreviousSpeaker=="OBAMA:"],type="l")
##when Romeny was the previous speaker toward the end, there were more positive statements.
plot(DebateStatementData$NEGPTStem[DebateStatementData$PreviousSpeaker=="ROMNEY:"],type="l")
plot(DebateStatementData$NEGPTStem[DebateStatementData$PreviousSpeaker=="OBAMA:"&DebateStatementData$Speaker=="ROMNEY:"],type="l")
setwd("~/WUSTL")
getwd()
